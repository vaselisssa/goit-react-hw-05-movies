{"version":3,"file":"static/js/358.ef1aba08.chunk.js","mappings":"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","sources":["pages/MovieDetails.jsx","services/Api.js"],"sourcesContent":["import { useEffect, useState, useRef, Suspense } from 'react';\nimport { useParams, useLocation, NavLink, Outlet } from 'react-router-dom';\n\nimport {\n  Box,\n  Container,\n  Button,\n  Card,\n  Image,\n  Stack,\n  CardBody,\n  Heading,\n  Text,\n  CardFooter,\n} from '@chakra-ui/react';\nimport { RiArrowGoBackLine } from 'react-icons/ri';\nimport { FaMasksTheater, FaScroll } from 'react-icons/fa6';\n\nimport { fetchMovieDetails } from 'services/Api';\nimport Loader from 'components/Loader';\nimport defaultPoster from 'images/default_poster.jpg';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const goBack = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    const movieDetails = async () => {\n      try {\n        const movie = await fetchMovieDetails(movieId);\n        setMovieDetails(movie);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    movieDetails();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <Loader />;\n  }\n\n  const userScore = Math.round(movieDetails.vote_average * 10);\n  const genresList = movieDetails?.genres?.map(genre => genre.name).join(', ');\n\n  return (\n    <Box as=\"main\" w=\"100%\" h=\"100%\" bgColor=\"green.100\">\n      <Container maxW=\"100%\" p={4}>\n        <Button\n          as={NavLink}\n          to={goBack.current}\n          leftIcon={<RiArrowGoBackLine />}\n          colorScheme=\"green\"\n          variant=\"solid\"\n          h={10}\n          w={32}\n          mb={4}\n        >\n          Go back\n        </Button>\n        <Card\n          as=\"div\"\n          direction={{ base: 'column', sm: 'row' }}\n          overflow=\"hidden\"\n          variant=\"outline\"\n          boxShadow=\"xl\"\n        >\n          <Image\n            objectFit=\"cover\"\n            maxW=\"100%\"\n            maxH={480}\n            src={\n              movieDetails.poster_path === null\n                ? defaultPoster\n                : `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`\n            }\n            alt={movieDetails.title}\n          />\n\n          <Stack>\n            <CardBody color=\"green.700\">\n              <Heading as=\"h2\" size=\"lg\" color=\"green.400\" mb={4}>\n                {movieDetails.title}\n              </Heading>\n              <Text py=\"2\" fontWeight={700} mb={4}>\n                User score: {userScore}%\n              </Text>\n              <Heading size=\"md\" color=\"green.500\">\n                Overview\n              </Heading>\n              <Text py=\"2\" mb={4}>\n                {movieDetails.overview}\n              </Text>\n              <Heading size=\"md\" color=\"green.500\">\n                Genres\n              </Heading>\n              <Text py=\"2\">\n                {genresList !== '' ? genresList : 'No genres provided'}\n              </Text>\n            </CardBody>\n\n            <CardFooter>\n              <Button\n                as={NavLink}\n                to=\"cast\"\n                leftIcon={<FaMasksTheater />}\n                colorScheme=\"green\"\n                variant=\"solid\"\n                h={10}\n                w={32}\n                mr={2}\n              >\n                Cast\n              </Button>\n              <Button\n                as={NavLink}\n                to=\"reviews\"\n                leftIcon={<FaScroll />}\n                colorScheme=\"green\"\n                variant=\"solid\"\n                h={10}\n                w={32}\n              >\n                Reviews\n              </Button>\n            </CardFooter>\n          </Stack>\n        </Card>\n\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </Box>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'f4f004cf00175f9c9d985cec6ba8ee29';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n"],"names":["movieId","useParams","location","useLocation","useState","movieDetails","setMovieDetails","goBack","useRef","state","from","useEffect","fetchMovieDetails","movie","console","error","Loader","userScore","Math","round","vote_average","genresList","genres","map","genre","name","join","as","w","h","bgColor","maxW","p","NavLink","to","current","leftIcon","colorScheme","variant","mb","direction","base","sm","overflow","boxShadow","objectFit","maxH","src","poster_path","alt","title","color","size","py","fontWeight","overview","mr","Suspense","fallback","API_KEY","axios","fetchTrendingMovies","response","data","results","fetchMovieCast","cast"],"sourceRoot":""}