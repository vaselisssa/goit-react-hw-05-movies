{"version":3,"file":"static/js/415.fca1f046.chunk.js","mappings":"oOA2BA,EAtBmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAD,UACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,SAAC,KAAD,CAEEC,OAAQ,CACNC,MAAO,SAHX,UAME,UAAC,KAAD,CAAMC,GAAE,kBAAaH,EAAMI,IAAMC,MAAOR,EAAxC,WACE,SAAC,KAAD,CAAUS,GAAIC,EAAAA,IAAeL,MAAM,UAClCF,EAAMQ,UAPJR,EAAMI,GAFE,KAetB,C,uJCiBD,UArCa,WACX,OAA4CK,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAQC,EAAAA,EAAAA,KAqBd,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEOC,EAAAA,EAAAA,MAFP,OAERpB,EAFQ,OAGde,EAAkBf,GAHJ,gDAKdgB,EAAM,CACJJ,MAAO,uBACPS,YAAa,kBACbC,OAAQ,QACRC,SAAU,IACVC,YAAY,IAVA,yDAAH,qDAefL,GACD,GAAE,CAACH,KAGF,SAAC,KAAD,CAAKN,GAAG,OAAOe,EAAE,OAAOC,EAAE,OAAOC,QAAQ,YAAzC,UACE,UAAC,IAAD,CAAWC,KAAK,OAAOC,EAAG,EAA1B,WACE,SAAC,IAAD,CAASnB,GAAG,KAAKoB,KAAK,KAAKxB,MAAM,YAAYyB,GAAI,EAAjD,+BAGA,SAAC,KAAD,CAAKzB,MAAM,YAAY0B,GAAI,EAA3B,UACE,SAAC,IAAD,CAAYhC,OAAQc,UAK7B,C,mMCtCKmB,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMd,EAAmB,mCAAG,oGACVc,EAAAA,EAAAA,IAAA,qCAAwCD,IAD9B,cAC3BE,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,oBAAuCN,IAD/B,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBI,EAAc,mCAAG,WAAMD,GAAN,uFACLL,EAAAA,EAAAA,IAAA,iBACXK,EADW,4BACgBN,IAFX,cACtBE,EADsB,yBAIrBA,EAASC,KAAKK,MAJO,2CAAH,sDAOdC,EAAiB,mCAAG,WAAMH,GAAN,uFACRL,EAAAA,EAAAA,IAAA,iBACXK,EADW,4BACgBN,IAFR,cACzBE,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,sDAOjBM,EAAY,mCAAG,WAAMC,GAAN,uFACHV,EAAAA,EAAAA,IAAA,8BACEU,EADF,oBACyBX,IAFtB,cACpBE,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD,0JClBrBQ,GAAUC,EAAAA,EAAAA,IAAW,SAAkBC,EAAOC,GAC9C,IAAIC,GAASC,EAAAA,EAAAA,IAAe,UAAWH,GACzC,GAA+BI,EAAAA,EAAAA,IAAiBJ,GAA1BK,GAAtB,EAAQC,WAAR,aACA,OAAuBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,IADwB,gBAGtBP,IAAAA,EACAK,WAAWG,EAAAA,EAAAA,IAAG,iBAAkBT,EAAMM,YACnCD,GALmB,IAMtB,MAAOH,IAGZ,IACDJ,EAAQ,YAAc,S","sources":["components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/Api.js","../node_modules/@chakra-ui/layout/src/heading.tsx"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { List, ListItem, ListIcon } from '@chakra-ui/react';\nimport { BiCameraMovie } from 'react-icons/bi';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <ListItem\n          key={movie.id}\n          _hover={{\n            color: 'white',\n          }}\n        >\n          <Link to={`/movies/${movie.id}`} state={location}>\n            <ListIcon as={BiCameraMovie} color=\"white\" />\n            {movie.title}\n          </Link>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import React, { useEffect, useState } from 'react';\nimport { Box, Container, Heading, useToast } from '@chakra-ui/react';\nimport { fetchTrendingMovies } from 'services/Api';\nimport MoviesList from 'components/MoviesList';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const toast = useToast();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const movies = await fetchTrendingMovies();\n        setTrendingMovies(movies);\n      } catch (error) {\n        toast({\n          title: 'Error fetching movie',\n          description: 'Try again later',\n          status: 'error',\n          duration: 9000,\n          isClosable: true,\n        });\n      }\n    };\n\n    fetchData();\n  }, [toast]);\n\n  return (\n    <Box as=\"main\" w=\"100%\" h=\"100%\" bgColor=\"green.100\">\n      <Container maxW=\"100%\" p={4}>\n        <Heading as=\"h1\" size=\"lg\" color=\"green.400\" mb={4}>\n          Trending movies:\n        </Heading>\n        <Box color=\"green.900\" pl={8}>\n          <MoviesList movies={trendingMovies} />\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = 'f4f004cf00175f9c9d985cec6ba8ee29';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const handleSearch = async searchQuery => {\n  const response = await axios.get(\n    `/search/movie?query=${searchQuery}&api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n"],"names":["movies","location","useLocation","map","movie","_hover","color","to","id","state","as","BiCameraMovie","title","useState","trendingMovies","setTrendingMovies","toast","useToast","useEffect","fetchData","fetchTrendingMovies","description","status","duration","isClosable","w","h","bgColor","maxW","p","size","mb","pl","API_KEY","axios","response","data","results","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews","handleSearch","searchQuery","props","forwardRef","styles","className","rest","useStyleConfig","omitThemingProps","__css","h2","Heading","chakra","cx"],"sourceRoot":""}