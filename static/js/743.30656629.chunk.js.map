{"version":3,"file":"static/js/743.30656629.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","services/Api.js"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { List, ListItem, ListIcon } from '@chakra-ui/react';\nimport { BiCameraMovie } from 'react-icons/bi';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <ListItem\n          key={movie.id}\n          _hover={{\n            color: 'white',\n          }}\n        >\n          <Link to={`/movies/${movie.id}`} state={location}>\n            <ListIcon as={BiCameraMovie} color=\"white\" />\n            {movie.title}\n          </Link>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { InputGroup, Input, Button, InputRightElement } from '@chakra-ui/react';\nimport { BsSearch } from 'react-icons/bs';\n\nconst SearchForm = () => {\n  const [value, setValue] = useState('');\n  const [, setSearchParams] = useSearchParams();\n\n  const handleChange = ({ target: { value } }) => {\n    setValue(value);\n  };\n\n  const updateQuery = name => {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateQuery(value);\n    setValue('');\n  };\n\n  return (\n    <InputGroup as=\"form\" size=\"lg\" maxW={480} mb={4} onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={handleChange}\n        autoFocus\n        autoComplete=\"off\"\n        pr=\"3.5rem\"\n        placeholder=\"Search movies\"\n        borderColor=\"green.400\"\n      />\n      <InputRightElement width=\"3.5rem\">\n        <Button\n          as=\"button\"\n          colorScheme=\"green\"\n          variant=\"solid\"\n          size=\"sm\"\n          type=\"submit\"\n        >\n          <BsSearch fill=\"white\" />\n        </Button>\n      </InputRightElement>\n    </InputGroup>\n  );\n};\n\nexport default SearchForm;\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Box, Container, Text, useToast } from '@chakra-ui/react';\n\nimport { handleSearch } from 'services/Api';\nimport SearchForm from 'components/SearchForm';\nimport MoviesList from 'components/MoviesList';\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [searchParams] = useSearchParams();\n  const toast = useToast();\n\n  const movieName = searchParams.get('name') ?? '';\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n\n    const fetchData = async () => {\n      try {\n        const response = await handleSearch(movieName);\n        setSearchMovies(response);\n      } catch (error) {\n        toast({\n          title: 'Error fetching movie',\n          description: 'Try again later',\n          status: 'error',\n          duration: 9000,\n          isClosable: true,\n        });\n      }\n    };\n    fetchData();\n  }, [movieName, toast]);\n\n  return (\n    <Box as=\"main\" w=\"100%\" h=\"100%\" bgColor=\"green.100\">\n      <Container maxW=\"100%\" p={4}>\n        <SearchForm />\n        {movieName === '' ? (\n          ''\n        ) : searchMovies && searchMovies.length === 0 ? (\n          <Text>\n            Sorry, we have not found any movies matching your query \"{movieName}\n            \".\n          </Text>\n        ) : (\n          <MoviesList movies={searchMovies} />\n        )}\n      </Container>\n    </Box>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'f4f004cf00175f9c9d985cec6ba8ee29';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const handleSearch = async searchQuery => {\n  const response = await axios.get(\n    `/search/movie?query=${searchQuery}&api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n"],"names":["movies","location","useLocation","map","movie","_hover","color","to","id","state","as","BiCameraMovie","title","useState","value","setValue","useSearchParams","setSearchParams","size","maxW","mb","onSubmit","e","name","preventDefault","I","type","onChange","target","autoFocus","autoComplete","pr","placeholder","borderColor","width","colorScheme","variant","fill","searchMovies","setSearchMovies","searchParams","toast","useToast","movieName","get","useEffect","fetchData","handleSearch","response","description","status","duration","isClosable","w","h","bgColor","p","length","MoviesList","API_KEY","axios","fetchTrendingMovies","data","results","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews","searchQuery"],"sourceRoot":""}